// <auto-generated />
using System;
using EntityFrameworkCore.Console;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EntityFrameworkCore.Console.Migrations
{
    [DbContext(typeof(HeroDbContext))]
    partial class HeroDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EntityFrameworkCore.Persistence.Affiliation", b =>
                {
                    b.Property<int>("AffiliationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AffiliationId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AffiliationId");

                    b.ToTable("Affiliations");
                });

            modelBuilder.Entity("EntityFrameworkCore.Persistence.Hero", b =>
                {
                    b.Property<int>("HeroId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HeroId"));

                    b.Property<int?>("AffiliationId")
                        .HasColumnType("int");

                    b.Property<string>("Alias")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly?>("LastSavedTheCity")
                        .HasColumnType("date");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("HeroId");

                    b.HasIndex("AffiliationId");

                    b.ToTable("Heroes");
                });

            modelBuilder.Entity("EntityFrameworkCore.Persistence.Power", b =>
                {
                    b.Property<int>("PowerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PowerId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PowerId");

                    b.ToTable("Powers");
                });

            modelBuilder.Entity("HeroPower", b =>
                {
                    b.Property<int>("HeroPowersPowerId")
                        .HasColumnType("int");

                    b.Property<int>("HeroesHeroId")
                        .HasColumnType("int");

                    b.HasKey("HeroPowersPowerId", "HeroesHeroId");

                    b.HasIndex("HeroesHeroId");

                    b.ToTable("HeroPower");
                });

            modelBuilder.Entity("EntityFrameworkCore.Persistence.Hero", b =>
                {
                    b.HasOne("EntityFrameworkCore.Persistence.Affiliation", "Affiliation")
                        .WithMany()
                        .HasForeignKey("AffiliationId");

                    b.Navigation("Affiliation");
                });

            modelBuilder.Entity("HeroPower", b =>
                {
                    b.HasOne("EntityFrameworkCore.Persistence.Power", null)
                        .WithMany()
                        .HasForeignKey("HeroPowersPowerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EntityFrameworkCore.Persistence.Hero", null)
                        .WithMany()
                        .HasForeignKey("HeroesHeroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
